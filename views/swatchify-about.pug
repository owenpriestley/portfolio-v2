extends layout

block content
  .row
    .col-md-5
    .col-md-7.lede
      h1 Ever wanted to put together an outfit based on a Neil Diamond record?
      br
      h1 Perhaps redecorate your home in a Talking Heads colour scheme?

  .row.spacer
    .col-md-6
      h2 What the heck is Swatchify?
      p I wanted to learn how to build web applications in Node.JS, so I built this web app.
      p Swatchify takes a song, artist or album, and generates swatches based on the artwork.
      a.case-study(href="/projects/swatchify" style="float: left") Try it out â†’

    .col-md-5
      .img-container-top
        .img-container
          img(src="/images/swatchify.png" style="max-width: 100%" alt="Swatchify in action")
          p Any song or artist you can find on Spotify

  .row.spacer
    .col-md-6
      h2 How it works
      p When you enter an artist, song or album title, Swatchify calls on #[a(href="https://developer.spotify.com/documentation/web-api/") the Spotify API] to grab album artwork for the first result.
      p Behind the scenes, #[a(href="https://github.com/akfish/node-vibrant/") node-vibrant] parses the image and picks out the most prominent 6 colours. 
      p Swatchify then renders the colours as a handy palette on the right-hand side of the page.

    .col-md-5
        .img-container-top
          .img-container
            img(src="/images/SpotifyNode.png" style="max-width: 100%" alt="Using Spotify's API via Node")
            p I used Node.JS and the Spotify API to find album art

  .row.spacer
    .col-md-6
      h2 What's next
      p As I build on my existing knowledge of JavaScript, HTML and CSS, I'd like to:
      ul  
        li improve the experience on mobile
        li support more than just the first result on Spotify
        li work in reverse - input colours, get music!